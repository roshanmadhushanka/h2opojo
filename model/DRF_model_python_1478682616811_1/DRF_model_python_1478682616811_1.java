/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-11-09T14:40:24.948+05:30
  3.11.0.3681
  
  Standalone prediction code with sample test data for DRFModel named DRF_model_python_1478682616811_1

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/DRF_model_python_1478682616811_1 > DRF_model_python_1478682616811_1.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m DRF_model_python_1478682616811_1.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="DRF_model_python_1478682616811_1", algorithm="drf")
public class DRF_model_python_1478682616811_1 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 4; }
  public int nclasses() { return 3; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_DRF_model_python_1478682616811_1.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 3;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* sepal_length */ null,
    /* sepal_width */ null,
    /* petal_length */ null,
    /* petal_width */ null,
    /* Class */ DRF_model_python_1478682616811_1_ColInfo_4.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.3333333333333333,0.3333333333333333,0.3333333333333333};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.3333333333333333,0.3333333333333333,0.3333333333333333};

  public DRF_model_python_1478682616811_1() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4647734356303628394L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    DRF_model_python_1478682616811_1_Forest_0.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_1.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_2.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_3.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_4.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_5.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_6.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_7.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_8.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_9.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_10.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_11.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_12.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_13.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_14.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_15.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_16.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_17.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_18.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_19.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_20.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_21.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_22.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_23.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_24.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_25.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_26.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_27.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_28.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_29.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_30.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_31.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_32.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_33.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_34.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_35.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_36.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_37.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_38.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_39.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_40.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_41.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_42.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_43.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_44.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_45.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_46.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_47.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_48.score0(data,preds);
    DRF_model_python_1478682616811_1_Forest_49.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_DRF_model_python_1478682616811_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[4];
  static {
    NamesHolder_DRF_model_python_1478682616811_1_0.fill(VALUES);
  }
  static final class NamesHolder_DRF_model_python_1478682616811_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "sepal_length";
      sa[1] = "sepal_width";
      sa[2] = "petal_length";
      sa[3] = "petal_width";
    }
  }
}
// The class representing column Class
class DRF_model_python_1478682616811_1_ColInfo_4 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    DRF_model_python_1478682616811_1_ColInfo_4_0.fill(VALUES);
  }
  static final class DRF_model_python_1478682616811_1_ColInfo_4_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "Iris-setosa";
      sa[1] = "Iris-versicolor";
      sa[2] = "Iris-virginica";
    }
  }
}

class DRF_model_python_1478682616811_1_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_0_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_0_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_0_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.750879f ? 
             (data[1 /* sepal_width */] <2.551953f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.4977264f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* petal_width */] <1.7499542f ? 
                 (data[0 /* sepal_length */] <6.2125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6500976f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6017578f ? 
                1.0f : 
                0.0f)) : 
        0.9782609f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_1_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_1_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_1_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.049543f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5078125f ? 
                     (data[0 /* sepal_length */] <5.942566f ? 
                         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.9921875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.4505153f ? 
            0.0f : 
             (data[0 /* sepal_length */] <5.2984376f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0492187f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
                1.0f : 
                 (data[0 /* sepal_length */] <6.04375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_2_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_2_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_2_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
             (data[0 /* sepal_length */] <4.946875f ? 
                 (data[3 /* petal_width */] <1.35625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* petal_length */] <5.1487803f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.60625f ? 
                     (data[3 /* petal_width */] <1.7125f ? 
                         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.746875f ? 
                             (data[1 /* sepal_width */] <2.3503907f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0484376f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (data[1 /* sepal_width */] <2.5484376f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.446875f ? 
                0.0f : 
                 (data[0 /* sepal_length */] <5.5515623f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.8488283f ? 
             (data[3 /* petal_width */] <1.75f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5503906f ? 
                     (data[2 /* petal_length */] <4.95f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_3_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_3_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_3_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* sepal_length */] <5.4496093f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.0492188f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* petal_width */] <0.7515625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* sepal_width */] <2.9492188f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7007812f ? 
             (data[3 /* petal_width */] <0.7021774f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.8488283f ? 
                    1.0f : 
                     (data[1 /* sepal_width */] <2.6484375f ? 
                        0.0f : 
                         (data[0 /* sepal_length */] <6.153125f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[3 /* petal_width */] <1.0f ? 
            0.0f : 
             (data[3 /* petal_width */] <1.5507812f ? 
                1.0f : 
                 (data[2 /* petal_length */] <4.9410157f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.1509767f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7007812f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <5.9521413f ? 
                0.0f : 
                 (data[1 /* sepal_width */] <2.6554687f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1023438f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* petal_width */] <1.5507812f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.998633f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_4_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_4_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_4_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* sepal_length */] <5.4496093f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <2.4519532f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.4484375f ? 
            0.0f : 
             (data[3 /* petal_width */] <1.0984375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* sepal_width */] <2.9492188f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
             (data[3 /* petal_width */] <0.6015625f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5970215f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* petal_width */] <1.703125f ? 
                 (data[2 /* petal_length */] <4.9484377f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5515625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <5.548047f ? 
            0.0f : 
             (data[3 /* petal_width */] <1.75f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.1007037f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.1509767f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* petal_width */] <1.703125f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5503784f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.049401f ? 
             (data[3 /* petal_width */] <1.75f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.033203f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_5_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_5_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_5_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (data[0 /* sepal_length */] <5.150781f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.4511719f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0582304f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.599219f ? 
            1.0f : 
             (data[3 /* petal_width */] <1.75f ? 
                 (data[2 /* petal_length */] <5.397294f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_6_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_6_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_6_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
             (data[1 /* sepal_width */] <2.5484376f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.2484374f ? 
                    1.0f : 
                     (data[1 /* sepal_width */] <2.3476562f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[2 /* petal_length */] <4.947201f ? 
                 (data[1 /* sepal_width */] <2.6f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* sepal_width */] <2.5484376f ? 
             (data[2 /* petal_length */] <4.951758f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_7_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_7_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_7_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[0 /* sepal_length */] <5.751953f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* petal_length */] <4.7541647f ? 
                1.0f : 
                 (data[2 /* petal_length */] <5.0506005f ? 
                     (data[0 /* sepal_length */] <6.259375f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.825f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (data[1 /* sepal_width */] <2.6492188f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.445508f ? 
                0.0f : 
                 (data[2 /* petal_length */] <4.9505982f ? 
                     (data[0 /* sepal_length */] <5.596875f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_8_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_8_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_8_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[3 /* petal_width */] <1.6487312f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3497066f ? 
                1.0f : 
                 (data[1 /* sepal_width */] <2.6453125f ? 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.2f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.010156f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* sepal_length */] <5.9453125f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <5.8513975f ? 
                    0.0f : 
                     (data[2 /* petal_length */] <4.9640627f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (data[1 /* sepal_width */] <2.646875f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.19375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.987109f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* petal_width */] <1.8503418f ? 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.15f ? 
                1.0f : 
                 (data[2 /* petal_length */] <5.401953f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_9_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_9_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_9_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* sepal_length */] <5.4496093f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <0.80078125f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* petal_width */] <0.70234376f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* sepal_width */] <2.9492188f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.894922f ? 
                 (data[2 /* petal_length */] <2.2054703f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* petal_length */] <5.0495315f ? 
                    0.0f : 
                     (data[3 /* petal_width */] <1.5494995f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <0.89921874f ? 
            0.0f : 
             (data[2 /* petal_length */] <5.0447264f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.4046874f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.853343f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.1509767f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.45f ? 
            0.0f : 
             (data[0 /* sepal_length */] <5.850916f ? 
                1.0f : 
                 (data[2 /* petal_length */] <4.8515625f ? 
                    0.0f : 
                     (data[2 /* petal_length */] <5.049536f ? 
                        1.0f : 
                         (data[0 /* sepal_length */] <5.95f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0447264f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_10_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_10_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_10_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7499542f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.4480467f ? 
                 (data[1 /* sepal_width */] <2.2515626f ? 
                     (data[0 /* sepal_length */] <5.509375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* sepal_width */] <2.5476441f ? 
                         (data[0 /* sepal_length */] <5.040625f ? 
                             (data[2 /* petal_length */] <3.9025f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[2 /* petal_length */] <4.8488283f ? 
                 (data[0 /* sepal_length */] <5.950391f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.64375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.3460937f ? 
                     (data[1 /* sepal_width */] <2.45f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[2 /* petal_length */] <4.8488283f ? 
             (data[1 /* sepal_width */] <3.0992188f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_11_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_11_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_11_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.945292f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[2 /* petal_length */] <5.051f ? 
             (data[3 /* petal_width */] <1.75f ? 
                 (data[0 /* sepal_length */] <6.15625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_12_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_12_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_12_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.04375f ? 
                 (data[1 /* sepal_width */] <2.54375f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5976562f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* sepal_length */] <5.9453125f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0504885f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.646875f ? 
                0.0f : 
                 (data[1 /* sepal_width */] <2.75f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[2 /* petal_length */] <4.8488283f ? 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_13_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_13_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_13_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0511718f ? 
                 (data[3 /* petal_width */] <1.75f ? 
                     (data[1 /* sepal_width */] <2.64375f ? 
                         (data[2 /* petal_length */] <4.963122f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.3500977f ? 
             (data[1 /* sepal_width */] <2.253125f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.24375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_14_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_14_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_14_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6487312f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* petal_length */] <4.8488283f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.9976563f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                 (data[1 /* sepal_width */] <2.5984375f ? 
                     (data[2 /* petal_length */] <4.696875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[2 /* petal_length */] <4.8488283f ? 
             (data[1 /* sepal_width */] <2.9984374f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_15_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_15_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_15_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.348633f ? 
                 (data[1 /* sepal_width */] <2.54375f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5960938f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.349219f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_16_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_16_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_16_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6487312f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.4498038f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9410157f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5495435f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* sepal_length */] <6.0507812f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1039062f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6500976f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.4502803f ? 
                0.0f : 
                 (data[1 /* sepal_width */] <2.45f ? 
                    1.0f : 
                     (data[1 /* sepal_width */] <2.9027345f ? 
                         (data[2 /* petal_length */] <4.871875f ? 
                            0.0f : 
                             (data[0 /* sepal_length */] <6.1125f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (data[0 /* sepal_length */] <6.0507812f ? 
             (data[2 /* petal_length */] <4.8488283f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_17_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_17_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_17_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[0 /* sepal_length */] <6.251172f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.6990232f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* petal_length */] <4.952539f ? 
                 (data[0 /* sepal_length */] <6.453125f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7034912f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.998633f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_18_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_18_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_18_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.945292f ? 
                 (data[1 /* sepal_width */] <2.546875f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.246875f ? 
                        1.0f : 
                         (data[0 /* sepal_length */] <5.6f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[0 /* sepal_length */] <6.4f ? 
                    0.0f : 
                     (data[0 /* sepal_length */] <6.94375f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* sepal_length */] <5.948828f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* petal_length */] <4.95026f ? 
             (data[3 /* petal_width */] <1.6515625f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.09375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* petal_length */] <5.0493665f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5078125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_19_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_19_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_19_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.750879f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* petal_width */] <1.7499542f ? 
                 (data[0 /* sepal_length */] <6.2125f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.045703f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.3040037f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6500976f ? 
                0.0f : 
                 (data[0 /* sepal_length */] <5.8046875f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_20_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_20_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_20_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7499542f ? 
             (data[3 /* petal_width */] <1.3500763f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9410157f ? 
                     (data[0 /* sepal_length */] <5.14375f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6484375f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* petal_width */] <1.8510346f ? 
                 (data[2 /* petal_length */] <4.8488283f ? 
                     (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0992188f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (data[1 /* sepal_width */] <2.848828f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9410157f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5992187f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* petal_width */] <1.8503418f ? 
             (data[2 /* petal_length */] <4.8488283f ? 
                 (data[0 /* sepal_length */] <5.9453125f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_21_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_21_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_21_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5491676f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3496653f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.3453126f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9640627f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[3 /* petal_width */] <1.850017f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0992188f ? 
                    0.0f : 
                    0.5f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5501953f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.349094f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9410157f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* sepal_length */] <5.948828f ? 
             (data[3 /* petal_width */] <1.8505859f ? 
                 (data[1 /* sepal_width */] <3.096875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_22_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_22_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_22_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[0 /* sepal_length */] <6.251172f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.846875f ? 
                    1.0f : 
                     (data[3 /* petal_width */] <1.5484375f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* petal_length */] <4.846875f ? 
                     (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* petal_width */] <1.75f ? 
                 (data[3 /* petal_width */] <1.449414f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0582304f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (data[0 /* sepal_length */] <4.950391f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3515625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* petal_width */] <1.75f ? 
             (data[2 /* petal_length */] <4.951758f ? 
                0.0f : 
                 (data[3 /* petal_width */] <1.55f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6496093f ? 
                         (data[2 /* petal_length */] <5.4421477f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[2 /* petal_length */] <4.85332f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_23_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_23_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_23_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.049543f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6005859f ? 
                    1.0f : 
                     (data[1 /* sepal_width */] <2.75f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5507812f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0447264f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5992187f ? 
                    0.0f : 
                     (data[1 /* sepal_width */] <2.75f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.55f ? 
                    1.0f : 
                    0.0f))) : 
        0.9782609f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_24_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_24_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_24_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7499542f ? 
             (data[3 /* petal_width */] <1.3500763f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.033203f ? 
                     (data[1 /* sepal_width */] <2.59375f ? 
                         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.7499022f ? 
                             (data[3 /* petal_width */] <1.6f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0447264f ? 
                 (data[1 /* sepal_width */] <2.5984375f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.749602f ? 
                         (data[3 /* petal_width */] <1.6f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.9782609f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_25_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_25_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_25_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7499542f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3500763f ? 
                1.0f : 
                 (data[1 /* sepal_width */] <2.646875f ? 
                    0.0f : 
                     (data[3 /* petal_width */] <1.4512261f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.04375f ? 
                             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.1f ? 
                                1.0f : 
                                 (data[1 /* sepal_width */] <2.7625f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0504885f ? 
            0.0f : 
             (data[0 /* sepal_length */] <6.0507812f ? 
                0.0f : 
                1.0f)) : 
        0.9782609f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_26_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_26_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_26_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.945292f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* petal_length */] <5.051f ? 
             (data[3 /* petal_width */] <1.75f ? 
                 (data[1 /* sepal_width */] <2.6007812f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_27_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_27_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_27_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* sepal_length */] <5.4496093f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <2.6017578f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* petal_width */] <0.6507813f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* sepal_width */] <2.9492188f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
             (data[3 /* petal_width */] <0.653125f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* sepal_length */] <6.05f ? 
                 (data[3 /* petal_width */] <1.553125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <0.89921874f ? 
            0.0f : 
             (data[3 /* petal_width */] <1.7527603f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5497936f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.425f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.1509767f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.8027344f ? 
            0.0f : 
             (data[3 /* petal_width */] <1.553125f ? 
                1.0f : 
                 (data[3 /* petal_width */] <1.699707f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.1006417f ? 
                 (data[0 /* sepal_length */] <6.3512797f ? 
                     (data[3 /* petal_width */] <1.4f ? 
                        0.0f : 
                         (data[2 /* petal_length */] <5.05625f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_28_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_28_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_28_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.8497286f ? 
            1.0f : 
             (data[2 /* petal_length */] <5.0499506f ? 
                 (data[3 /* petal_width */] <1.75f ? 
                     (data[1 /* sepal_width */] <2.35f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[2 /* petal_length */] <4.95026f ? 
             (data[3 /* petal_width */] <1.6515625f ? 
                0.0f : 
                 (data[2 /* petal_length */] <4.850478f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* sepal_length */] <6.599219f ? 
                1.0f : 
                 (data[3 /* petal_width */] <1.75f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_29_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_29_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_29_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.049543f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1039062f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* petal_width */] <1.703125f ? 
                 (data[3 /* petal_width */] <1.5507812f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0486326f ? 
                0.0f : 
                 (data[3 /* petal_width */] <1.55f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* petal_length */] <4.900195f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0992188f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_30_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_30_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_30_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0582304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* sepal_length */] <5.9453125f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0992188f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.033203f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[0 /* sepal_length */] <5.948828f ? 
             (data[2 /* petal_length */] <4.9410157f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_31_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_31_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_31_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7499542f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                 (data[0 /* sepal_length */] <4.953906f ? 
                     (data[2 /* petal_length */] <3.8999984f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[1 /* sepal_width */] <2.646875f ? 
                    0.0f : 
                     (data[1 /* sepal_width */] <2.7489502f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.646875f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[2 /* petal_length */] <4.8488283f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.3503907f ? 
            0.0f : 
             (data[1 /* sepal_width */] <2.646875f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.041406f ? 
                     (data[1 /* sepal_width */] <2.853125f ? 
                         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.7502441f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[2 /* petal_length */] <4.8488283f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_32_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_32_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_32_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7001724f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.4499155f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.05f ? 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.840625f ? 
                         (data[2 /* petal_length */] <4.7796874f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.55f ? 
                                 (data[2 /* petal_length */] <4.9478517f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (data[2 /* petal_length */] <4.8488283f ? 
                 (data[1 /* sepal_width */] <2.99375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.75f ? 
                     (data[2 /* petal_length */] <5.04931f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
            1.0f : 
             (data[3 /* petal_width */] <1.9011719f ? 
                 (data[0 /* sepal_length */] <6.55f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_33_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_33_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_33_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[3 /* petal_width */] <1.6487312f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5499011f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.7609377f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6500976f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_34_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_34_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_34_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.8497286f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
                1.0f : 
                 (data[3 /* petal_width */] <1.7495544f ? 
                    0.0f : 
                     (data[0 /* sepal_length */] <6.047656f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.4505153f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
            1.0f : 
             (data[0 /* sepal_length */] <6.1f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_35_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_35_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_35_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.8497286f ? 
            1.0f : 
             (data[2 /* petal_length */] <5.0499506f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5078125f ? 
                     (data[3 /* petal_width */] <1.65625f ? 
                         (data[1 /* sepal_width */] <2.35f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[2 /* petal_length */] <5.051f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.500781f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0984375f ? 
                     (data[3 /* petal_width */] <1.6523438f ? 
                         (data[0 /* sepal_length */] <6.1489134f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_36_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_36_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_36_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.8497286f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.7498436f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.65625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* petal_width */] <1.6f ? 
                    1.0f : 
                     (data[0 /* sepal_length */] <6.0484376f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.4505153f ? 
            0.0f : 
             (data[0 /* sepal_length */] <5.249219f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* petal_length */] <4.84952f ? 
             (data[3 /* petal_width */] <1.6f ? 
                0.0f : 
                 (data[0 /* sepal_length */] <6.04375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_37_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_37_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_37_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9453125f ? 
                    1.0f : 
                     (data[2 /* petal_length */] <5.049243f ? 
                        0.0f : 
                         (data[3 /* petal_width */] <1.54375f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* petal_width */] <1.7007812f ? 
             (data[2 /* petal_length */] <4.9481616f ? 
                0.0f : 
                 (data[1 /* sepal_width */] <2.75f ? 
                     (data[3 /* petal_width */] <1.55f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_38_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_38_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_38_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* sepal_length */] <5.4496093f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <2.6017578f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* petal_width */] <0.70234376f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* sepal_width */] <2.9492188f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.953125f ? 
                 (data[2 /* petal_length */] <2.3559813f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.5494995f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <0.9484375f ? 
            0.0f : 
             (data[0 /* sepal_length */] <6.15625f ? 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6999756f ? 
                    1.0f : 
                    0.5f) : 
                 (data[1 /* sepal_width */] <3.153125f ? 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.744531f ? 
                         (data[3 /* petal_width */] <1.748462f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.1509767f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.351564f ? 
                0.0f : 
                 (data[0 /* sepal_length */] <5.150781f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                 (data[3 /* petal_width */] <1.6992188f ? 
                     (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.6484375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0447264f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_39_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_39_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_39_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
            1.0f : 
             (data[3 /* petal_width */] <1.75f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.344016f ? 
                     (data[2 /* petal_length */] <4.952033f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.4921875f ? 
                             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.54875f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[0 /* sepal_length */] <5.9527345f ? 
                     (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.3511214f ? 
                 (data[2 /* petal_length */] <4.9511037f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.499219f ? 
                         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.553125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[0 /* sepal_length */] <5.9486327f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_40_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_40_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_40_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.7503905f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.8497286f ? 
                     (data[0 /* sepal_length */] <4.95625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.4890623f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* petal_length */] <4.8497286f ? 
                     (data[0 /* sepal_length */] <5.952344f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[3 /* petal_width */] <1.553125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (data[1 /* sepal_width */] <2.5484376f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* petal_width */] <1.75f ? 
             (data[2 /* petal_length */] <5.0489016f ? 
                 (data[0 /* sepal_length */] <6.3546877f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* petal_length */] <4.847421f ? 
                 (data[0 /* sepal_length */] <5.950391f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_41_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_41_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_41_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
            1.0f : 
             (data[3 /* petal_width */] <1.703125f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.05625f ? 
                     (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.552881f ? 
                         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.74375f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (data[3 /* petal_width */] <1.7007812f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0492187f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5492005f ? 
                     (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.74375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_42_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_42_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_42_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.8488283f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.0992188f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* petal_length */] <5.1489205f ? 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.60625f ? 
                     (data[3 /* petal_width */] <1.7034912f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.3500977f ? 
             (data[0 /* sepal_length */] <4.946875f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <3.896875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
            1.0f : 
             (data[0 /* sepal_length */] <6.0507812f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_43_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_43_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_43_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.4480467f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9453125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* petal_length */] <5.049543f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (data[1 /* sepal_width */] <2.5484376f ? 
             (data[0 /* sepal_length */] <4.9535155f ? 
                 (data[2 /* petal_length */] <3.9f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* petal_width */] <1.75f ? 
             (data[2 /* petal_length */] <4.9507813f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_44_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_44_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_44_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.749821f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
                 (data[0 /* sepal_length */] <5.950391f ? 
                    0.0f : 
                     (data[3 /* petal_width */] <1.75f ? 
                         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.354559f ? 
                             (data[0 /* sepal_length */] <6.17f ? 
                                 (data[3 /* petal_width */] <1.55f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
        0.010526316f : 
         (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.1484375f ? 
             (data[0 /* sepal_length */] <5.950391f ? 
                1.0f : 
                 (data[3 /* petal_width */] <1.75f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.355319f ? 
                         (data[0 /* sepal_length */] <6.159375f ? 
                             (data[3 /* petal_width */] <1.55f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_45_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_45_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_45_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.9496355f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.7516255f ? 
                 (data[0 /* sepal_length */] <5.0015626f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5484376f ? 
                     (data[3 /* petal_width */] <1.65625f ? 
                        1.0f : 
                         (data[2 /* petal_length */] <4.85f ? 
                             (data[1 /* sepal_width */] <3.095f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (data[2 /* petal_length */] <5.048777f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <2.75f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* petal_length */] <4.95026f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.5478516f ? 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                     (data[3 /* petal_width */] <1.65625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.601758f ? 
                1.0f : 
                 (data[2 /* petal_length */] <5.045949f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_46_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_46_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_46_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0504885f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6503906f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9453125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* sepal_width */] <3.096875f ? 
                     (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.9375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[3 /* petal_width */] <1.7001953f ? 
                 (data[3 /* petal_width */] <1.5500977f ? 
                    0.0f : 
                     (data[1 /* sepal_width */] <2.84375f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
             (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.646875f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* petal_width */] <1.546875f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.45f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* petal_length */] <4.8488283f ? 
             (data[1 /* sepal_width */] <3.096875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_47_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_47_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_47_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[0 /* sepal_length */] <5.751953f ? 
             (data[0 /* sepal_length */] <4.951583f ? 
                 (data[1 /* sepal_width */] <2.4492188f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.7034912f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* petal_length */] <4.745117f ? 
                1.0f : 
                 (data[3 /* petal_width */] <1.7499542f ? 
                     (data[0 /* sepal_length */] <6.2007813f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.4234376f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.0984373f ? 
             (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.952539f ? 
                 (data[1 /* sepal_width */] <2.54375f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6082032f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* sepal_length */] <6.398828f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.9782609f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_48_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_48_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_48_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* petal_width */] <0.80078125f ? 
        0.0f : 
         (data[2 /* petal_length */] <4.8488283f ? 
            1.0f : 
             (data[3 /* petal_width */] <1.7499542f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.3515625f ? 
                     (data[0 /* sepal_length */] <6.1421876f ? 
                        1.0f : 
                         (data[1 /* sepal_width */] <2.9f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
         (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0504885f ? 
            0.0f : 
             (data[2 /* petal_length */] <5.349122f ? 
                 (data[0 /* sepal_length */] <6.1578126f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[2 /* petal_length */] <4.8488283f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class DRF_model_python_1478682616811_1_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += DRF_model_python_1478682616811_1_Tree_49_class_0.score0(fdata);
    preds[2] += DRF_model_python_1478682616811_1_Tree_49_class_1.score0(fdata);
    preds[3] += DRF_model_python_1478682616811_1_Tree_49_class_2.score0(fdata);
  }
}
class DRF_model_python_1478682616811_1_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        1.0f : 
        0.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* petal_length */] <2.4519532f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.75f ? 
             (Double.isNaN(data[0]) || data[0 /* sepal_length */] <7.103125f ? 
                 (Double.isNaN(data[2]) || data[2 /* petal_length */] <5.0582304f ? 
                     (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6453125f ? 
                        1.0f : 
                         (data[2 /* petal_length */] <4.734375f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* petal_length */] <4.8497286f ? 
                 (data[1 /* sepal_width */] <2.99375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class DRF_model_python_1478682616811_1_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* petal_length */] <4.750879f ? 
         (Double.isNaN(data[3]) || data[3 /* petal_width */] <1.6515625f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* petal_width */] <1.75f ? 
             (data[2 /* petal_length */] <5.0489016f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* petal_length */] <4.847421f ? 
                 (data[1 /* sepal_width */] <2.99375f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


